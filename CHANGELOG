11/6/17:    Release 0.98

    - Enable PIC32MZEF SoC prefetcher and flash ECC. Some acceleration and
      increase of flash lifetime.

    - Spurios IRQ is ignored. It can happen - PIC32MZEF can produce a spurious
      IRQ 0 and that number is a CP0 COMPARE interrupt number.

    - Switch to a scheduler tick in time keeping from small ticks. It saves some
      power and increases RealTime capability.

    - Print an ignored write to device registers to console. Very useful during
      startup of new guest SW, Instead of searching in guest source code for
      ports/pins setup it can be looked into console log to figure out how
      port/pin routing is configured by guest.

    - Manual setup of board registers feature. Board registers can be
      initialized from a manually prepared array at start time.

    - PIC32MZEF PMD registers configuration (Power Management Disable) during
      start time.

    - A couple of bugfixes:

	- Adjucent mixed PTE (small and full size) in configuration created
	  an invalid PTE tree.

	- Change of "current" frame ptr during context switch is fixed to
	  satisfy an extended optimization in new toolchain

	- Clearing LLbit on context switch uses VM0 map but not VM7 and
	  provided a wrong result. Adjusted to toolchain in a correct address
	  offset calculation.

    - Some minor fixes.


7/5/17:     Release 0.97

    - Added access protection for guest DMA via PIC32MZEF System Bus
      Arbiter registers. Configuration is adjusted, DMA protection in absense of
      IOMMU, via SBA requires that Guest Virtual Addgress == Physical.
      New option 'dma' defines guest DMA zone. Additional options 'dma-set' and
      'dma-cfgpg-position' describes DMA device Priviledge Group and device
      Peripheral Set for slave devices. Look into Microchip PIC32MZEF Family
      Data Sheet sections:

	4.2-4.3 System Bus Arbitration
	34.0 Special features (for description of CFGPG register)

      for technical details.
      Now guest can't corrupt other guest or tinyVP memory and device registers.

    - DMA guest on Digilent ChipKIT WiFire board

    - A modified Sergei Vakulenko's pic32mz.h is used for symbolic definition of
      PIC32MZEF device registers and bits.

    - Some practical improvement is done in build process, like stop make at
      configuration error etc

    - A couple of bugs fixed: IC emulation bit position for CP0 COMPARE timer,
      check a real IRQ mask in IC then a next interrupt is picked, use device
      registers as uncachable and "volatile" in test configurations and UART.

    - Buildfix: incorrect handling of modification time of ".map" files vs guest
      image file is fixed.

    - A separate Documentation directory is created


6/16/17:    Release 0.96

    - New build framework for different platforms and different boards
      Board-dependent initalization and console definition is now located
      in separate files. Python build scripts have now a library of platforms
      to do a platform-dependent stuff in a separate module. tinyVP startup now
      can use board-specific functions for board registers setup.

    - A simple bootloader is written into a separate file. It can be used
      instead of board 0xBFC00000 bootloader. It just initializes CPU/caches/etc
      and jumps to tinyVP initialization.

    - Setup of PIC32MZEF EFUSE registers is added for flashing tinyVP into
      bootloader area.

    - Microchip DM320007 board support and test guest

    - Olimex PIC32-EMZ64 board support and test guest

    - pic32prog is update to latest release


5/25/17:    Release 0.95

After testing with MyNewT RTOS from Runtime.io a couple of bugfixes:

    - FPU and DSP context save/restore  :)

    - bzero call is now correct register set

    - insert_IRQ now queues IRQ if it does exist, prevents skipping it

    - Console issues a virtual input IRQ request if input is available

    - A couple of bugfixes in IC emulator, the adequate offsets, the correct
      place to finish IRQ (before a new IRQ is injected), priority limitation
      is fixed, signed vs unsigned in IPL processing etc

New features:

    - Essential change of timekeeping: switch to 64bit time and count with
      high word as "generation" + a correct sequence of save/restore timing
      registers to prevent a timer interrupt loss.

    - Guest CP0 Wired support

    - New console commands are added for VM debug

    - A little change of an automated build process to allow a multiline build
      shell macro (optional OFFSET)

    - Empty device emulator is added to allow using MIPS SW0/SW1 interrupts.
